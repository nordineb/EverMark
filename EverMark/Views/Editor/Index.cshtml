@using System.Web.Optimization
@model EverMark.ViewModels.Editor.IndexViewModel

@{
    ViewBag.Title = @Model.Title;
}

<style type="text/css">
    .container { max-width: 100%; margin-left: 0; margin-right: 15px; padding-left: 0; padding-right: 0; }
    #mainRow { margin-top: -8px; }
    .row .row { margin: 0; }
    .row:last-child { margin-top: 1px; }
    .col-lg-6, .col-lg-12, .col-xs-6, .col-md-6 { padding-right: 0; }

    .navbar-nav { margin: 0; }
    .navbar-header { padding-left: 10px; }
    .navbar-collapse { padding-right: 0; }
    .navbar li:last-child a { padding-right: 0; }

    .checkbox { margin-top: 7px; margin-bottom: 0; }

    #markdownInput { width: 100%; white-space: pre; word-wrap: break-word; font-family: monospace; font-size: 0.8em; background-color: rgb(30,30,30); color: rgb(220, 220,220); border: 0; padding: 10px; }
    #markdownRender { padding: 10px; overflow: auto; }
    #submitButtonCell { text-align: right; }
    #noteTitleCell { text-align: center; }
    #noteTitle { padding: 10px; line-height: 32px; }
    #noteDownloadCell { text-align: right; }
</style>

<div class="row" id="mainRow">
    <div class="col-lg-6">
        <textarea name="content" id="markdownInput">@Model.Content</textarea>
        <div class="row">
            <div class="col-xs-6">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" id="enableAutoSave">
                        Auto-save every 60s
                    </label>
                </div>
            </div>
            <div class="col-xs-6" id="submitButtonCell">
                <span id="submitStatus">&nbsp;</span>
                <input type="submit" value="Save to Evernote" id="submitButton" class="btn btn-success" />
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div id="markdownRender"></div>
        <div class="row">
            <div class="col-md-6" id="noteTitleCell">
                <span id="noteTitle" class="alert-info">@Model.NotebookAndTitle</span>
            </div>
            <div class="col-md-6" id="noteDownloadCell">
                <a href="@Url.Action("Preview", new { note = Model.NoteId })" class="btn btn-default">View / Download</a>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/markdown")

    <script>
        var AUTOSAVE_COOKIE_KEY = "autosave";

        $(document).ready(function () {
            $("#markdownInput").keyup(function () {
                updateMarkdown();
                saveToLocalStorage();
            });
            $("#submitButton").click(save);

            resizeDivs();
            updateMarkdown();
            $(window).resize(function () {
                resizeDivs();
            });

            checkForDifferencesBetweenLocalAndServer();

            if ($.cookie(AUTOSAVE_COOKIE_KEY) == null || $.cookie(AUTOSAVE_COOKIE_KEY) == "true")
                $("#enableAutoSave").prop("checked", true);
            enableOrDisableAutoSave();
            $("#enableAutoSave").click(enableOrDisableAutoSave);
        });

        function resizeDivs() {
            var height = $(this).height();
            height = height - 88;
            $("#markdownRender").css("height", height + "px");
            $("#markdownInput").css("height", height + "px");
        }

        function updateMarkdown() {
            var converter = Markdown.getSanitizingConverter();
            var text = $("#markdownInput").val();
            var html = converter.makeHtml(text);
            $("#markdownRender").html(html);
        }

        function save() {
            var text = $("#markdownInput").val();

            $("#submitButton").prop("disabled", true);
            $("#submitStatus").html("").removeClass("alert-success").removeClass("alert-danger");
            $.ajax("@Url.Action("Index", new { note = Model.NoteId })", {
                type: "POST",
                data: { content: text }
            }).done(function () {
                $("#submitStatus").html("Saved :)").addClass("alert-success");
                setTimeout("$('#submitStatus').html('');", 5000);
            }).fail(function () {
                $("#submitStatus").html("Error while saving :(").addClass("alert-danger");
            }).always(function () {
                $("#submitButton").prop("disabled", false);
            });
        }

        var _autoSaveTimer = null;
        function enableOrDisableAutoSave() {
            if ($("#enableAutoSave").prop("checked")) {
                $.cookie(AUTOSAVE_COOKIE_KEY, "true");
                _autoSaveTimer = setInterval("save();", 10000);
            } else {
                $.cookie(AUTOSAVE_COOKIE_KEY, "false");
                clearInterval(_autoSaveTimer);
            }
        }

        function checkForDifferencesBetweenLocalAndServer() {
            var evernoteContent = $("#markdownInput").val();
            var localContent = loadFromLocalStorage();

            if (localContent == null)
                return;

            if (evernoteContent != localContent) {
                var dialogResult = confirm("There are differences between your last locally saved version and the version from Evernote. Do you want to load your local version and overwrite the changes on Evernote?");
                if (dialogResult) {
                    $("#markdownInput").val(loadFromLocalStorage());
                    updateMarkdown();
                }
            }
        }

        function saveToLocalStorage() {
            var text = $("#markdownInput").val();
            localStorage["note_@Model.NoteId"] = text;
        }

        function loadFromLocalStorage() {
            return localStorage["note_@Model.NoteId"];
        }
    </script>
}
